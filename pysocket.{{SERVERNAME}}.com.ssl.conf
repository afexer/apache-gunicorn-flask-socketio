<VirtualHost *:443>
    ServerAdmin webmaster@{{SERVERNAME}}.com
    ServerName pysocket.{{SERVERNAME}}.com
    DocumentRoot /var/www/pysocket.{{SERVERNAME}}.com

	ErrorLog "/var/log/httpd/pysocket.{{SERVERNAME}}.com-ssl-error_log"
    CustomLog "/var/log/httpd/pysocket.{{SERVERNAME}}.com-ssl-access_log" combined

    SSLCertificateFile /etc/httpd/ssl/{{SERVERNAME}}.com.crt
    SSLCertificateKeyFile /etc/httpd/ssl/{{SERVERNAME}}.com.key

    SSLEngine On
    SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH
    SSLProtocol All -SSLv2 -SSLv3
    SSLHonorCipherOrder On

    SSLProxyEngine on
    SSLProxyVerify none
    SSLProxyCheckPeerCN off
    SSLProxyCheckPeerName off

    ProxyPreserveHost On

    <Proxy *>
		Require all granted
	</Proxy>

	ProxyRequests off
	ProxyVia on

    Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED

    <Proxy balancer://ws-{{SERVERNAME}}-cluster>
        BalancerMember ws://127.0.0.1:8000 route=node1
        BalancerMember ws://127.0.0.1:8001 route=node2
        ProxySet  lbmethod=byrequests stickysession=ROUTEID
    </Proxy>

    <Proxy balancer://{{SERVERNAME}}-cluster>
        BalancerMember http://127.0.0.1:8000 route=node1
        BalancerMember http://127.0.0.1:8001 route=node2
        ProxySet  lbmethod=byrequests stickysession=ROUTEID
    </Proxy>

    ProxyPass /socket.io/ balancer://ws-{{SERVERNAME}}-cluster/socket.io
    ProxyPassReverse /socket.io balancer://ws-{{SERVERNAME}}-cluster/socket.io

    ProxyPass / balancer://{{SERVERNAME}}-cluster/
    ProxyPassReverse / balancer://{{SERVERNAME}}-cluster


    Alias /static/ /var/www/pysocket.{{SERVERNAME}}.com/app/static/
    ProxyPass /static !
    ProxyPassReverse /static !

    <Directory "/var/www/pysocket.{{SERVERNAME}}.com">
        Options -Indexes
        Require all granted
    </Directory>

</VirtualHost>